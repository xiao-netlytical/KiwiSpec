define conn_path=../sample_data/zeek,
output_path=../sample_data/result,application_path=../rules/application


########
# performance issue
#every one minute sampling of a five minute interval, get DNS request count for per window and per source address
read conn_path/conn.json as flows
create {window_start: {dns_src: cnt}}  as r
var i,j select
    flows[i]["id.orig_h"] as dns_src;
    int(epoch_time(flows[i]["ts"])/60) as window_start;
    count distinct(j from flows[j]) group by dns_src, window_start as cnt;
where flows[i]["id.resp_p"] == 53; flows[j]["id.resp_p"] == 53; flows[j]["id.orig_h"] == dns_src;
int(epoch_time(flows[j]["ts"])/60) >= window_start and int(epoch_time(flows[j]["ts"])/60) < window_start + 5
write output_path/5_min_dns_request.json from r

#######
# Not working for x[y+z][_] or x[y | z][_] 
READ ../../sample_data/result/ip_to_servers.json AS srvs, 
READ output_path/ip_to_servers.json AS srvs; 
output_path/server_to_ips.json AS ips;
conn_path/conn.json AS flows 

CREATE {d_ip: ipg} as r
VAR i SELECT
	flows[i]["id.resp_h"] as d_ip;
    collect set(ips[srvs[d_ip|[]][_]][_]) AS ipg
WRITE ip_groups.json FROM r

############
# not supported yet
READ ../../sample_data/zeek/conn.json AS flows
create [dip:sip] as r1
select 
VAR i;
flows[i]["id.resp_p"] as dip

VAR j;
flows[j]["id.resp_p"] as sip




